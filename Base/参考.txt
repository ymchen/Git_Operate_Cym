1.下载
在 Windows 上安装
在 Windows 上安装 Git 也有几种安装方法。 官方版本可以在 Git 官方网站下载。 打开 http://git-scm.com/download/win，下载会自动开始。 要注意这是一个名为 Git for Windows 的项目（也叫做 msysGit），
和 Git 是分别独立的项目；更多信息请访问 http://msysgit.github.io/。

另一个简单的方法是安装 GitHub for Windows。 该安装程序包含图形化和命令行版本的 Git。 
它也能支持 Powershell，提供了稳定的凭证缓存和健全的换行设置。 稍后我们会对这方面有更多了解，
现在只要一句话就够了，这些都是你所需要的。 你可以在 GitHub for Windows 网站下载，
网址为 http://windows.github.com。


用户信息
当安装完 Git 应该做的第一件事就是设置你的用户名称与邮件地址。
 这样做很重要，因为每一个 Git 的提交都会使用这些信息，并且它会写入到你的每一次提交中，不可更改：

$ git config --global user.name "ChenYiMin-Dev"
$ git config --global user.email 254906610@qq.com


ssh-keygen -t rsa -b 4096 -C "loseyyou@gmail.com"
安全码 gy6511109


ssh-keygen -t rsa -b 4096 -C "254906610@qq.com"


ssh-keygen -t ed25519 -C "loseyyou@gmail.com"


Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/ChenYiMin/.ssh/id_rsa):
Created directory '/c/Users/ChenYiMin/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/ChenYiMin/.ssh/id_rsa.
Your public key has been saved in /c/Users/ChenYiMin/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:pSTdSIv9PDFjHkqsx7QfPVlG9VwxVw+ocy3hExHGR7o loseyyou@gmail.com
The key's randomart image is:
+---[RSA 4096]----+
|        .  .+=++B|
|       * + .=o.o*|
|      o X Oo.=o +|
|       B Xo*==.  |
|      . S *oEo   |
|       . . o .   |
|          .      |
|                 |
|                 |
+----[SHA256]-----+

cd /c/Users/ChenYiMin/.ssh


cat id_rsa.pub >> ~/.ssh/authorized_keys
 
git@github.com:ymchen/hello-world.git

git remote set-url origin git@github.com:ymchen/hello-world.git


ssh-keygen -t rsa -b 4096 -C "254906610@gmail.com"






GitHub Help
GitHub.com
Enterprise Server
GitHub Actions
GitHub Desktop
Atom 
Electron 
English 
GitHub.com Authentication Connecting to GitHub with SSH Generating a new SSH key and adding it to the ssh-agent
Generating a new SSH key and adding it to the ssh-agent
After you've checked for existing SSH keys, you can generate a new SSH key to use for authentication, then add it to the ssh-agent.

Mac
Windows
Linux
In this article
Generating a new SSH key
Adding your SSH key to the ssh-agent
Further reading
If you don't already have an SSH key, you must generate a new SSH key. If you're unsure whether you already have an SSH key, check for existing keys.

If you don't want to reenter your passphrase every time you use your SSH key, you can add your key to the SSH agent, which manages your SSH keys and remembers your passphrase.

Generating a new SSH key
Open Git Bash.

Paste the text below, substituting in your GitHub email address.

$ ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
This creates a new ssh key, using the provided email as a label.

> Generating public/private rsa key pair.
When you're prompted to "Enter a file in which to save the key," press Enter. This accepts the default file location.

> Enter a file in which to save the key (/c/Users/you/.ssh/id_rsa):[Press enter]
At the prompt, type a secure passphrase. For more information, see "Working with SSH key passphrases".

> Enter passphrase (empty for no passphrase): [Type a passphrase]
> Enter same passphrase again: [Type passphrase again]
Adding your SSH key to the ssh-agent
Before adding a new SSH key to the ssh-agent to manage your keys, you should have checked for existing SSH keys and generated a new SSH key.
If you have GitHub Desktop installed, you can use it to clone repositories and not deal with SSH keys. It also comes with the Git Bash tool, which is the preferred way of running git commands on Windows.

Ensure the ssh-agent is running:

If you are using the Git Shell that's installed with GitHub Desktop, the ssh-agent should be running.
If you are using another terminal prompt, such as Git for Windows, you can use the "Auto-launching the ssh-agent" instructions in "Working with SSH key passphrases", or start it manually:

# start the ssh-agent in the background
$ eval $(ssh-agent -s)
> Agent pid 59566
Add your SSH private key to the ssh-agent. If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_rsa in the command with the name of your private key file.

$ ssh-add ~/.ssh/id_rsa
Add the SSH key to your GitHub account.

Further reading
"About SSH"
"Working with SSH key passphrases"
"Authorizing an SSH key for use with SAML single sign-on"
Ask a human
Can't find what you're looking for?
Product


clip < ~/.ssh/id_rsa.pub


用git status查看git状态提示中文乱码:274\232\350\256\256\346\200\273

git config --global core.quotepath false


add
import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)
pip 当前内建命令并不支持升级所有已安装的Python模块。

列出当前安装的包：

 pip list
列出可升级的包：

 pip list --outdate
升级一个包：

 pip install --upgrade requests  // mac,linux,unix 在命令前加 sudo -H
升级所有可升级的包：
pip freeze --local | grep -v '^-e' | cut -d = -f 1  | xargs -n1 pip install -U
 
for i in `pip list -o --format legacy|awk '{print $1}'` ; 


安装 page control


安装 psutil
安装 psutil
pip install psutil


源数据接入，基础层、汇总层、整合层、集市层；
● 并整合前端的报表应用，负责其他应用系统的供数；
● 负责前台的需求分析、设计。数据运维；
● 应用技术：DB2、Datastage、Cognos

1148muq
1148muq

优启通3.3版本

老毛桃


select attrelid,attnum,attname
from pg_attribute
where attrelid = 'pg_catalog.pg_class'::regclass::oid;
